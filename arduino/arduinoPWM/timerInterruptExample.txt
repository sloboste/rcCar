#include <avr/io.h>
#include <util/delay.h>
#include <avr/interrupt.h>  
 
#define green_led_on()  PORTC |= _BV(0)
#define green_led_off()  PORTC &= ~_BV(0)
 
int main (void)
{
    DDRB  = 0b11111111;   // All outputs
    DDRC  = 0b01111111;   // All outputs (Although we will just use PC0 )
 
    TIMSK0 = _BV(OCIE0A) | _BV(OCIE0B);  // Enable Interrupt TimerCounter0 Compare Match A & B (SIG_OUTPUT_COMPARE0A/SIG_OUTPUT_COMPARE0A)
    TCCR0A = _BV(WGM01);               // Mode = CTC
    TCCR0B = _BV(CS02) | _BV(CS00);    // Clock/1024, 0.001024 seconds per tick
    OCR0A = 244;                       // 0.001024*244 ~= .25 SIG_OUTPUT_COMPARE0A will be triggered 4 times per second.
    OCR0B = 220;                       // 0.001024*220 ~= .225 SIG_OUTPUT_COMPARE0B will be triggered 25ms before SIG_OUTPUT_COMPARE0A
   
    sei();
 
    while(1)
    {
        sweep();
    }
}
 
void sweep()
{
    PORTB = 0b10000000;
    for (int i=0;i<8;i++)
    {
        _delay_ms(100);
        PORTB >>= 1;
    }
}
 
ISR(SIG_OUTPUT_COMPARE0A)
{
    green_led_off();
}
 
ISR(SIG_OUTPUT_COMPARE0B)
{
    green_led_on();
}
